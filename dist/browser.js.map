{"version":3,"sources":["../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","constants.js","index.js","browser.js"],"names":["SEPARATOR","FINGERPRINT_ALGO","name","SYM_ALGO","length","ASYM_ALGO","modulusLength","publicExponent","Uint8Array","hash","URLS","production","sandbox","module","exports","DidwwEncryptedFile","buffer","toString","arrayBufferToString","toBase64String","btoa","toFile","buildFile","toArrayBuffer","logError","message","console","error","fetchPublicKeys","url","fetch","response","json","payload","data","map","res","attributes","key","cryptoFingerprint","text","digestAlgo","textBuff","stringToArrayBuffer","sha1Func","crypto","subtle","digest","bind","then","digestBuff","arrayBufferToHexString","calculateFingerprint","pemPublicKeys","publicKeysBase64","pemPubKey","pemToBase64Key","atob","join","str","buf","ArrayBuffer","bufView","i","charCodeAt","concatArrayBuffers","buffers","buffersSizes","buff","byteLength","totalSize","reduce","a","b","result","forEach","index","offset","slice","set","bytes","byte","String","fromCharCode","hexString","byteString","type","window","navigator","msSaveBlob","file","Blob","lastModifiedDate","Date","File","lastModified","readFileContent","Promise","resolve","reject","reader","FileReader","onload","onerror","readAsArrayBuffer","pubKeyPem","split","generateKey","cryptoKey","exportKey","generateRandomArrayBuffer","size","getRandomValues","encryptAES","dataBuffer","keyBuffer","ivBuffer","importKey","encrypt","iv","encryptedBuffer","encryptRSA","pubKeyBuffer","DidwwEncrypt","options","environment","publicKeysUrl","publicKeys","testPublicKeys","fingerprint","getPublicKeys","getFingerprint","keys","clearCache","RsaKeys","encryptedAes","AesKeyIvBuffer","encryptedAesKeyIvBufferA","encryptedAesKeyIvBufferB","encryptContent","binaryContent","encryptFile"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"browser.js","sourceRoot":"../src","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","const SEPARATOR = \":::\"\nconst FINGERPRINT_ALGO = { name: \"sha-1\" }\nconst SYM_ALGO = { name: \"AES-CBC\", length: 256 }\nconst ASYM_ALGO = {\n    name: \"RSA-OAEP\",\n    modulusLength: 4096,\n    publicExponent: new Uint8Array([1, 0, 1]),\n    hash: { name: \"SHA-256\" }\n}\nconst URLS = {\n    production: 'https://api.didww.com/v3/public_keys',\n    sandbox: 'https://api-sandbox.didww.com/v3/public_keys'\n}\n\nmodule.exports = {\n    SEPARATOR,\n    FINGERPRINT_ALGO,\n    SYM_ALGO,\n    ASYM_ALGO,\n    URLS\n}\n","import {\n    SEPARATOR,\n    FINGERPRINT_ALGO,\n    SYM_ALGO,\n    ASYM_ALGO,\n    URLS\n} from './constants'\n\nfunction DidwwEncryptedFile(buffer) {\n    this.toString = () => arrayBufferToString(buffer)\n    this.toBase64String = () => btoa(arrayBufferToString(buffer))\n    this.toFile = (name) => buildFile(buffer, name || 'file.enc', 'text/plain')\n    this.toArrayBuffer = () => buffer\n}\n\nfunction logError(message) {\n    if (console && console.error) console.error(message)\n}\n\nasync function fetchPublicKeys(url) {\n    const response = await fetch(url)\n    const payload = await response.json()\n    return payload.data.map(res => res.attributes.key)\n}\n\nfunction cryptoFingerprint(text, digestAlgo) {\n    const textBuff = stringToArrayBuffer(text);\n    const sha1Func = crypto.subtle.digest.bind(crypto.subtle, digestAlgo);\n    return sha1Func(textBuff)\n        .then(digestBuff => arrayBufferToHexString(digestBuff))\n}\n\nasync function calculateFingerprint(pemPublicKeys) {\n    const publicKeysBase64 = pemPublicKeys.map(pemPubKey => pemToBase64Key(pemPubKey))\n    return [\n        await cryptoFingerprint(atob(publicKeysBase64[0]), FINGERPRINT_ALGO),\n        await cryptoFingerprint(atob(publicKeysBase64[1]), FINGERPRINT_ALGO),\n    ].join(SEPARATOR)\n}\n\nfunction stringToArrayBuffer(str) {\n    let buf = new ArrayBuffer(str.length)\n    let bufView = new Uint8Array(buf)\n    for (let i = 0; i < str.length; i++) {\n        bufView[i] = str.charCodeAt(i)\n    }\n    return buf\n}\n\nfunction concatArrayBuffers(buffers) {\n    if (buffers.length === 1) return buffers[0];\n\n    const buffersSizes = buffers.map(buff => buff.byteLength)\n    const totalSize = buffersSizes.reduce((a, b) => a + b, 0)\n    const result = new Uint8Array(totalSize)\n    buffers.forEach( (buffer, index) => {\n        const offset = buffersSizes.slice(0, index).reduce((a, b) => a + b, 0)\n        result.set(new Uint8Array(buffer), offset)\n    })\n    return result.buffer\n}\n\nfunction arrayBufferToString(buf) {\n    let bytes = new Uint8Array(buf)\n    return bytes.reduce((str, byte) => str + String.fromCharCode(byte), \"\")\n}\n\nfunction arrayBufferToHexString(buf) {\n    let bytes = new Uint8Array(buf)\n    return bytes.reduce((hexString, byte) => {\n        let byteString = byte.toString(16)\n        if (byteString.length === 1) {\n            byteString = '0' + byteString\n        }\n        return hexString + byteString\n    }, \"\");\n}\n\nfunction buildFile(buffer, name, type) {\n    // Edge browser does not support File\n    if (window && window.navigator && window.navigator.msSaveBlob) {\n        let file = new Blob([buffer], { type: type });\n        file.lastModifiedDate = new Date();\n        file.name = name;\n        return file;\n    }\n\n    return new File([buffer], name, { type: type, lastModified: new Date() })\n}\n\nfunction readFileContent(file) {\n    return new Promise((resolve, reject) => {\n        let reader = new FileReader()\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = () => reject(reader.error)\n        reader.readAsArrayBuffer(file)\n    })\n}\n\nfunction pemToBase64Key(pubKeyPem) {\n    // pemPubKey should look like this\n    // \"-----BEGIN PUBLIC KEY-----\\n<pubKeyBase64>\\n-----END PUBLIC KEY-----\\n\"\n    if (pubKeyPem[pubKeyPem.length - 1] !== \"\\n\") pubKeyPem = pubKeyPem + \"\\n\"\n    return pubKeyPem.split(\"\\n\").slice(1, -2).join(\"\")\n}\n\nasync function generateKey() {\n    const cryptoKey = await crypto.subtle.generateKey(\n        SYM_ALGO,\n        true,\n        [\"encrypt\", \"decrypt\"]\n    )\n    return await crypto.subtle.exportKey(\"raw\", cryptoKey)\n}\n\nfunction generateRandomArrayBuffer(size) {\n    return crypto.getRandomValues(new Uint8Array(size)).buffer\n}\n\nasync function encryptAES(dataBuffer) {\n    const keyBuffer = await generateKey()\n    const ivBuffer = generateRandomArrayBuffer(16)\n    let cryptoKey = null;\n\n    try {\n        cryptoKey = await crypto.subtle.importKey(\n            \"raw\",\n            keyBuffer,\n            { name: SYM_ALGO.name },\n            false,\n            [\"encrypt\", \"decrypt\"]\n        )\n    } catch (e) {\n        logError('Exception during import AES key', e)\n        return null\n    }\n\n    try {\n        const encryptedBuffer = await crypto.subtle.encrypt(\n            { name: SYM_ALGO.name, iv: ivBuffer },\n            cryptoKey,\n            dataBuffer\n        )\n        return { key: keyBuffer, iv: ivBuffer, data: encryptedBuffer }\n    } catch (e) {\n        logError('Exception during encrypt AES', e)\n        return null\n    }\n}\n\nasync function encryptRSA(pubKeyPem, dataBuffer) {\n    const pubKeyBuffer = stringToArrayBuffer(atob(pemToBase64Key(pubKeyPem)))\n    let cryptoKey = null;\n\n    try {\n        cryptoKey = await crypto.subtle.importKey(\n            \"spki\",\n            pubKeyBuffer,\n            ASYM_ALGO,\n            false,\n            [\"encrypt\"]\n        )\n    } catch (e) {\n        logError(\"Failed to import RSA pubKey\", e)\n        return null\n    }\n\n    try {\n        return await crypto.subtle.encrypt(\n            {\n                name: ASYM_ALGO.name,\n                hash: ASYM_ALGO.hash\n            },\n            cryptoKey,\n            dataBuffer\n        )\n    } catch (e) {\n        logError(\"Failed to encrypt RSA\", e)\n        return null\n    }\n}\n\nfunction DidwwEncrypt(options) {\n    if (!options) options = {}\n    let environment = options.environment || 'sandbox'\n    let publicKeysUrl = options.url || URLS[environment]\n    let publicKeys = null\n    let testPublicKeys = null\n    let fingerprint = null\n    if (environment === 'test') {\n        testPublicKeys = options.publicKeys\n        if (!testPublicKeys || !testPublicKeys[0] || !testPublicKeys[1]) {\n            throw 'pass publicKeys as an array of 2 public keys'\n        }\n    } else if (!publicKeysUrl) {\n        throw 'pass valid environment or url'\n    }\n\n    this.getPublicKeys = async () => {\n        if (testPublicKeys) return testPublicKeys\n        if (publicKeys) return publicKeys\n\n        publicKeys = await fetchPublicKeys(publicKeysUrl)\n        return publicKeys\n    }\n    this.getFingerprint = async () => {\n        if (fingerprint) return fingerprint\n\n        const keys = await this.getPublicKeys()\n        fingerprint = await calculateFingerprint(keys)\n        return fingerprint\n    }\n    this.clearCache = () => {\n        publicKeys = null\n        fingerprint = null\n    }\n    this.encrypt = async buffer => {\n        const RsaKeys = await this.getPublicKeys()\n        const encryptedAes = await encryptAES(buffer)\n        const AesKeyIvBuffer = concatArrayBuffers([encryptedAes.key, encryptedAes.iv])\n        const encryptedAesKeyIvBufferA = await encryptRSA(RsaKeys[0], AesKeyIvBuffer)\n        const encryptedAesKeyIvBufferB = await encryptRSA(RsaKeys[1], AesKeyIvBuffer)\n        const encryptedBuffer = concatArrayBuffers([\n            encryptedAesKeyIvBufferA,\n            encryptedAesKeyIvBufferB,\n            encryptedAes.data\n        ])\n        return new DidwwEncryptedFile(encryptedBuffer)\n    }\n    this.encryptContent = async binaryContent => {\n        return this.encrypt(stringToArrayBuffer(binaryContent))\n    }\n    this.encryptFile = file => {\n        return readFileContent(file).then(buffer => this.encrypt(buffer))\n    }\n}\n\nexport default DidwwEncrypt\nexport { DidwwEncryptedFile, SYM_ALGO, ASYM_ALGO }\n","import DidwwEncrypt from './index'\nwindow.DidwwEncrypt = DidwwEncrypt\n"]}