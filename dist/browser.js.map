{"version":3,"sources":["constants.js","index.js","browser.js"],"names":["SEPARATOR","FINGERPRINT_ALGO","name","SYM_ALGO","length","ASYM_ALGO","modulusLength","publicExponent","Uint8Array","hash","URLS","production","sandbox","module","exports","require","DidwwEncryptedFile","content","toString","toFile","buildFile","toArrayBuffer","stringToArrayBuffer","logError","message","console","error","fetchPublicKeys","url","fetch","then","response","json","payload","data","map","res","attributes","key","cryptoFingerprint","text","digestAlgo","textBuff","sha1Func","crypto","subtle","digest","bind","digestBuff","arrayBufferToHexString","calculateFingerprint","pemPublicKeys","publicKeysBase64","pemPubKey","PemToBase64Key","fingerprints","atob","result","push","_","join","str","buf","ArrayBuffer","bufView","i","charCodeAt","hexStringToArrayBuffer","hexString","intArray","match","byte","parseInt","buffer","arrayBufferToString","bytes","reduce","String","fromCharCode","byteString","type","window","navigator","msSaveBlob","file","Blob","lastModifiedDate","Date","File","lastModified","readFileContent","Promise","resolve","reject","reader","FileReader","onload","onerror","readAsDataURL","generateKey","cryptoKey","exportKey","keyBuffer","encryptAES","ivBufView","getRandomValues","salt","repeat","importKey","encrypt","iv","encryptedBuffer","encryptedContent","btoa","aesKey","split","slice","encryptRSA","pubKeyBase64","catch","DidwwEncrypt","options","environment","publicKeysUrl","publicKeys","testPublicKeys","fingerprint","getPublicKeys","getFingerprint","keys","clearCache","encryptContent","fileContent","asymKeys","symKey","symEncryptedContent","symEncryptedKey","encryptedParts","concat","encryptFile","encryptArrayBuffer","binary"],"mappings":"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","file":"browser.js","sourceRoot":"../src","sourcesContent":["const SEPARATOR = \":::\"\nconst FINGERPRINT_ALGO = { name: \"sha-1\" }\nconst SYM_ALGO = { name: \"AES-CBC\", length: 256 }\nconst ASYM_ALGO = {\n    name: \"RSA-OAEP\",\n    modulusLength: 4096,\n    publicExponent: new Uint8Array([1, 0, 1]),\n    hash: { name: \"SHA-256\" }\n}\nconst URLS = {\n    production: 'https://api.didww.com/v3/public_keys',\n    sandbox: 'https://api-sandbox.didww.com/v3/public_keys'\n}\n\nmodule.exports = {\n    SEPARATOR,\n    FINGERPRINT_ALGO,\n    SYM_ALGO,\n    ASYM_ALGO,\n    URLS\n}\n","const {\n    SEPARATOR,\n    FINGERPRINT_ALGO,\n    SYM_ALGO,\n    ASYM_ALGO,\n    URLS\n} = require('./constants')\n\nfunction DidwwEncryptedFile (content) {\n    this.toString = () => content\n    this.toFile = (name) => buildFile(content, name || 'file.enc', 'text/plain')\n    this.toArrayBuffer = () => stringToArrayBuffer(content)\n}\n\nfunction logError(message) {\n    if (console && console.error) console.error(message)\n}\n\nfunction fetchPublicKeys(url) {\n    return fetch(url)\n        .then(response => response.json())\n        .then(\n            payload => payload.data.map(res => res.attributes.key)\n        )\n}\n\nfunction cryptoFingerprint (text, digestAlgo) {\n    var textBuff = stringToArrayBuffer(text);\n    var sha1Func = crypto.subtle.digest.bind(crypto.subtle, digestAlgo);\n    return sha1Func(textBuff)\n        .then(digestBuff => arrayBufferToHexString(digestBuff))\n}\n\nfunction calculateFingerprint(pemPublicKeys) {\n    let publicKeysBase64 = pemPublicKeys.map(pemPubKey => PemToBase64Key(pemPubKey))\n    let fingerprints = []\n    return cryptoFingerprint(atob(publicKeysBase64[0]), FINGERPRINT_ALGO)\n        .then(result => fingerprints.push(result))\n        .then(_ => cryptoFingerprint(atob(publicKeysBase64[1]), FINGERPRINT_ALGO))\n        .then(result => fingerprints.push(result))\n        .then(_ => fingerprints.join(SEPARATOR))\n}\n\nfunction stringToArrayBuffer(str) {\n    let buf = new ArrayBuffer(str.length)\n    let bufView = new Uint8Array(buf)\n    for (let i = 0; i < str.length; i++) {\n        bufView[i] = str.charCodeAt(i)\n    }\n    return buf\n}\n\nfunction hexStringToArrayBuffer (hexString) {\n    let intArray = hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16))\n    return new Uint8Array(intArray).buffer\n}\n\nfunction arrayBufferToString (buf) {\n    let bytes = new Uint8Array(buf)\n    return bytes.reduce((str, byte) => str + String.fromCharCode(byte), \"\")\n}\n\nfunction arrayBufferToHexString (buf) {\n    let bytes = new Uint8Array(buf)\n    return bytes.reduce((hexString, byte) => {\n        let byteString = byte.toString(16)\n        if (byteString.length === 1) {\n            byteString = '0' + byteString\n        }\n        return hexString + byteString\n    }, \"\");\n}\n\nconst buildFile = (content, name, type) => {\n    // Edge browser does not support File\n    if (window && window.navigator && window.navigator.msSaveBlob) {\n        let file = new Blob([content], {type: type});\n        file.lastModifiedDate = new Date();\n        file.name = name;\n        return file;\n    }\n\n    return new File([content], name, {type: type, lastModified: new Date()})\n}\n\nfunction readFileContent (file) {\n    return new Promise((resolve, reject) => {\n        let reader = new FileReader()\n        reader.onload = () => resolve(reader.result)\n        reader.onerror = () => reject(reader.error)\n        reader.readAsDataURL(file)\n    })\n}\n\nfunction generateKey () {\n    return crypto.subtle.generateKey(\n        SYM_ALGO,\n        true,\n        [\"encrypt\", \"decrypt\"]\n    ).then(cryptoKey => {\n        return crypto.subtle.exportKey(\"raw\", cryptoKey)\n            .then(keyBuffer => arrayBufferToHexString(keyBuffer))\n    })\n}\n\nfunction encryptAES (key, content) {\n    let keyBuffer = hexStringToArrayBuffer(key)\n    let ivBufView = crypto.getRandomValues(new Uint8Array(16))\n    let salt = '0'.repeat(16)\n\n    return crypto.subtle.importKey(\n        \"raw\",\n        keyBuffer,\n        { name: SYM_ALGO.name },\n        false,\n        [\"encrypt\", \"decrypt\"]\n    ).then(cryptoKey => {\n        return crypto.subtle.encrypt(\n            { name: SYM_ALGO.name, iv: ivBufView },\n            cryptoKey,\n            stringToArrayBuffer(content)\n        ).then(encryptedBuffer => {\n            // add first 16 bytes salt for backward compatibility old encrypted data.\n            let encryptedContent = btoa(salt + arrayBufferToString(encryptedBuffer))\n            let aesKey = [key, arrayBufferToHexString(ivBufView.buffer)].join(SEPARATOR)\n            return { key: aesKey, content: encryptedContent }\n        })\n    })\n}\n\nfunction PemToBase64Key (pemPubKey) {\n    // pemPubKey should look like this\n    // \"-----BEGIN PUBLIC KEY-----\\n<pubKeyBase64>\\n-----END PUBLIC KEY-----\\n\"\n    if (pemPubKey[pemPubKey.length - 1] !== \"\\n\") pemPubKey = pemPubKey + \"\\n\"\n    return pemPubKey.split(\"\\n\").slice(1, -2).join(\"\")\n}\n\nfunction encryptRSA(pemPubKey, content) {\n    let pubKeyBase64 = PemToBase64Key(pemPubKey)\n\n    return crypto.subtle.importKey(\n        \"spki\",\n        stringToArrayBuffer(atob(pubKeyBase64)),\n        ASYM_ALGO,\n        false,\n        [\"encrypt\"]\n    ).then(function (cryptoKey) {\n        return crypto.subtle.encrypt(\n            {\n                name: ASYM_ALGO.name,\n                hash: ASYM_ALGO.hash\n            },\n            cryptoKey,\n            stringToArrayBuffer(content)\n        ).then(function (encryptedBuffer) {\n            return btoa(arrayBufferToString(encryptedBuffer))\n        }).catch(function (error) {\n            logError(\"Failed to encrypt with RSA pubKey\", error)\n            return null\n        })\n    }).catch(function (error) {\n        logError(\"Failed to import RSA pubKey\", error)\n        return null\n    })\n}\n\nfunction DidwwEncrypt(options) {\n    if (!options) options = {}\n    let environment = options.environment || 'sandbox'\n    let publicKeysUrl = options.url || URLS[environment]\n    let publicKeys = null\n    let testPublicKeys = null\n    let fingerprint = null\n    if (environment === 'test') {\n        testPublicKeys = options.publicKeys\n        if (!testPublicKeys || !testPublicKeys[0] ||  !testPublicKeys[1]) {\n            throw 'pass publicKeys as an array of 2 public keys'\n        }\n    } else if (!publicKeysUrl) {\n        throw 'pass valid environment or url'\n    }\n\n    this.getPublicKeys = () => {\n        if (testPublicKeys) return new Promise(resolve => resolve(testPublicKeys))\n        if (publicKeys) return new Promise(resolve => resolve(publicKeys))\n\n        return fetchPublicKeys(publicKeysUrl)\n            .then(result => {\n                publicKeys = result\n                return publicKeys\n            })\n    }\n    this.getFingerprint = () => {\n        if (fingerprint) return new Promise(resolve => resolve(fingerprint))\n\n        return this.getPublicKeys()\n            .then(keys => calculateFingerprint(keys))\n            .then(result => {\n                fingerprint = result\n                return fingerprint\n            })\n    }\n    this.clearCache = () => {\n        publicKeys = null\n        fingerprint = null\n    }\n    this.encryptContent = fileContent => {\n        let asymKeys = null\n        let symKey = null\n        let symEncryptedContent = null\n        let symEncryptedKey = null // { content, key }\n        let encryptedParts = []\n\n        return this.getPublicKeys().then(result => asymKeys = result)\n            .then(\n                _ => generateKey().then(result => symKey = result)\n            )\n            .then(\n                _ => encryptAES(symKey, fileContent).then(result => {\n                    symEncryptedContent = result.content\n                    symEncryptedKey = result.key\n                })\n            )\n            .then(\n                _ => encryptRSA(asymKeys[0], symEncryptedKey).then(result => encryptedParts.push(result))\n            )\n            .then(\n                _ => encryptRSA(asymKeys[1], symEncryptedKey).then(result => encryptedParts.push(result))\n            )\n            .then(_ => {\n                return new DidwwEncryptedFile(\n                    encryptedParts.concat(symEncryptedContent).join(SEPARATOR)\n                )\n            })\n    }\n    this.encryptFile = file => {\n        return readFileContent(file).then(this.encryptContent)\n    }\n    this.encryptArrayBuffer = buffer => {\n        let binary = arrayBufferToString(buffer)\n        return this.encryptContent(binary)\n    }\n}\n\nDidwwEncrypt['DidwwEncryptedFile'] = DidwwEncryptedFile\nDidwwEncrypt['SYM_ALGO'] = SYM_ALGO\nDidwwEncrypt['ASYM_ALGO'] = ASYM_ALGO\n\n// export default DidwwEncrypt\nmodule.exports = DidwwEncrypt\n","window.DidwwEncrypt = require('./index');\n"]}